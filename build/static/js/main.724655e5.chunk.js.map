{"version":3,"sources":["components/Header/Header.jsx","components/Description/Description.jsx","components/Runways/Runways.jsx","components/Weather/Weather.jsx","App.jsx","index.js"],"names":["Header","react_default","a","createElement","className","alt","Description","_ref","airport_data","name","city","icao","latitude","toFixed","longitude","Runways","runways","map","item","i","key","data-test","surfaceType","latitudeBase","longitudeBase","length","width","Weather","_useAxios","useAxios","_useAxios2$","Object","slicedToArray","data","loading","error","conditions","report","bearing","wind","direction","ISODateTime","Date","dateIssued","dateStamp","toLocaleDateString","timeStamp","toLocaleTimeString","hour","minute","index","degreeMin","tempC","relativeHumidity","cloudLayers","coverage","toUpperCase","visibility","distanceSm","speedKts","App","components_Header_Header","components_Description_Description","role","components_Weather_Weather","components_Runways_Runways","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.724655e5.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nconst Header = () => (\n  <header className='app-header'>\n    <div className='container'>\n      <div className='logo' alt='Foreflight logo' />\n    </div>\n  </header>\n);\n\nexport default Header;","import React from 'react';\nimport './Description.scss';\n\nconst Description = ({ airport_data }) => (\n  <section className='page-description'>\n    <div className='container'>\n      <header>\n        <h1>{airport_data.name}</h1>\n        <h2>{airport_data.city}</h2>\n      </header>\n      <ul className='subheader'>\n        <li><strong className='label'>ICAO:</strong>{airport_data.icao}</li>\n        <li>\n          <strong className='label'>Lat / Long:</strong>\n          {(airport_data.latitude).toFixed(7)}\n          <span className='slash'>/</span>\n          {(airport_data.longitude).toFixed(7)}\n        </li>\n      </ul>\n    </div>\n  </section >\n);\n\nexport default Description;","import React from 'react';\nimport './Runways.scss';\n\nconst Runways = ({ airport_data }) => (\n  <section className='runways'>\n    <ul className='runway-list'>\n\n      {/* List available runways and useful information describing their condition. */}\n      {airport_data.runways.map((item, i) => (\n        <li key={i} className='card'>\n          <header className='card-header'>\n            <h4 className='card-title' data-test='component-title'>Runway {item.name}</h4>\n          </header>\n          <ul className='card-body'>\n            <li data-test='component-label'><strong className='label'>Surface Type:</strong>{(item.surfaceType)}</li>\n            <li data-test='component-label'>\n              <strong className='label'>Lat / Long:</strong>\n              {(item.latitudeBase).toFixed(3)}\n              <span className='slash'>/</span>\n              {(item.longitudeBase).toFixed(3)}\n            </li>\n            <li data-test='component-label'><strong className='label'>Dimensions:</strong>{item.length} x {item.width} ft.</li>\n          </ul>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nexport default Runways;","import React from 'react';\nimport './Weather.scss';\nimport useAxios from 'axios-hooks';\n\nconst Weather = () => {\n  const [{ data, loading, error }] = useAxios(\n    'http://localhost:3000/weather/khou.json'\n  );\n\n  if (loading) return <p className='loading'>Loading weather information..</p>\n  if (error) return <p className='error'>Error!</p>\n\n  const conditions = data.report.conditions;\n\n  const bearing = conditions.wind.direction;\n  const bearingArr = [\n    'N', 'NNE', 'NE', 'ENE', 'E', 'ESE', 'SE', 'SSE', 'S', 'SSW', 'SW', 'WSW', 'W', 'WNW', 'NW', 'NNW'\n  ];\n\n  const ISODateTime = new Date(conditions.dateIssued);\n  const dateStamp = ISODateTime.toLocaleDateString();\n  const timeStamp = ISODateTime.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n\n  // Divide compass rose into cardinal, intercardinal and \n  // secondary-intercardinal directions.\n  // (360 / 16 = 22.5) \n  const direction = bearingArr.map((item, index) => {\n    let degreeMin = index * 22.5;\n    let degreeMax = degreeMin + 22.5;\n\n    // Assign a direction (N, E, S, W, etc.) to each range of 16 directions.\n    if (bearing > degreeMin && bearing < degreeMax) {\n      return (\n        // Display the bearing and its relative direction.\n        <span key={index}>{bearing} {item}</span>\n      )\n    }\n  });\n\n  return (\n    <section className='weather'>\n      <section className='card'>\n        <header className='card-header'>\n          <h4 className='card-title'>Weather Conditions</h4>\n          <p className='card-subtitle time-stamp'>as of {timeStamp}, {dateStamp}</p>\n        </header>\n        <div className='card-body'>\n          <ul>\n            <li>\n              {/* Temp (F) */}\n              <strong className='label'>Temperature:</strong>\n              <span data-test='component-temperature'>{(conditions.tempC * 9 / 5) + 32}&#8457;</span>\n            </li>\n            <li>\n              {/* Relative humidity (%) */}\n              <strong className='label'>Relative Humidity:</strong>\n              <span data-test='component-humidity'>{conditions.relativeHumidity}&#37;</span>\n            </li>\n            <li>\n              {/* Summary of cloud coverage (text string) */}\n              <strong className='label'>Cloud Coverage</strong>\n              <span data-test='component-clouds'>{conditions.cloudLayers.map(item => item.coverage.toUpperCase())}</span>\n            </li>\n            <li>\n              {/* Visibility (Statute Miles) */}\n              <strong className='label'>Visibility:</strong>\n              <span data-test='component-visibility'>{conditions.visibility.distanceSm} miles</span>\n            </li>\n            <li>\n              {/* Wind Speed (MPH) */}\n              <strong className='label'>Wind Speed:</strong>\n              <span data-test='component-wind-speed'>{(conditions.wind.speedKts * 1.151).toFixed(1)} mph</span>\n            </li>\n            <li>\n              {/* Wind Direction (cardinal directions to secondary-intercardinal precision) */}\n              <strong className='label'>Wind Direction:</strong>\n              <span data-test='component-wind-direction'>{direction}</span>\n            </li>\n          </ul>\n        </div>\n      </section>\n    </section>\n  )\n}\n\nexport default Weather;","import React from 'react';\nimport useAxios from 'axios-hooks';\nimport Header from './components/Header/Header';\nimport Description from './components/Description/Description';\nimport Runways from './components/Runways/Runways';\nimport Weather from './components/Weather/Weather';\n\nconst App = () => {\n  /**\n   * Data for Header and Runways components\n   */\n  const [{ data, loading, error }] = useAxios(\n    'http://localhost:3000/airports/khou.json'\n  );\n\n  if (loading) return <p className='loading'>Loading runway information...</p>\n  if (error) return <p className='error'>Error!</p>\n\n  const airport_data = data;\n\n  return (\n    <div className='app-wrapper'>\n      <Header />\n      <Description airport_data={airport_data} />\n      <div className='main' role='main'>\n        <div className='container'>\n          <Weather />\n          <Runways airport_data={airport_data} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}